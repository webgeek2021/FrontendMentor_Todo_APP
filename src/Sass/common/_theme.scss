
$very-light-gray :  hsl(0, 0%, 98%);
$very-light-grayish-blue : hsl(236, 33%, 92%);
$light-grayish-blue : hsl(233, 11%, 84%);
$dark-grayish-blue : hsl(236, 9%, 61%);
$very-dark-grayish-blue : hsl(235, 19%, 35%);

$very-dark-blue : hsl(235, 21%, 11%);
$very-dark-desaturated-blue : hsl(235, 24%, 19%);
$light-grayish-blue : hsl(234, 39%, 85%);
$light-grayish-blue-hover : hsl(236, 33%, 92%);
$dark-grayish-blue :  hsl(234, 11%, 52%);
$very-dark-grayish-blue :  hsl(233, 14%, 35%);

$check-background : linear-gradient(to right ,  hsl(192, 100%, 67%) ,  hsl(280, 87%, 65%) );
$bright-blue : hsl(220,98%,61%);
$check-btn-background-color : white;
// .theme-light{
//     --background-color : $very-light-gray;
//     --banner-background-image : url("../../assets/images/bg-desktop-light.jpg");
//     --todo-background-color : white;
//     --check-btn-background-color : white;
// }
// .theme-dark{
//     --background-color : $very-dark-blue;
//     --banner-background-image : url("../../assets/images/bg-desktop-dark.jpg");
//     --todo-background-color : hsl(235,24%,19%);
//     --check-btn-background-color : $very-dark-blue;
// }   

$themes : (
    light : (
        todoBackgroundColor : white,
        backgroundColor : $very-light-gray,
        banner-image : url("../../assets/images/bg-desktop-light.jpg"),
        check-btn-background-color : white,
        todofontColor : $very-dark-grayish-blue,
        todoCompleteFontColor : $very-light-grayish-blue,
        footerfontColor : $very-dark-grayish-blue,
        footerHoverColor : $very-dark-grayish-blue,
        borderColor : $very-light-grayish-blue,
        ),
    dark : (
        todoBackgroundColor : $very-dark-desaturated-blue,
        backgroundColor : $very-dark-blue,
        banner-image :  url("../../assets/images/bg-desktop-dark.jpg"),
        check-btn-background-color : $very-dark-blue,
        todofontColor : $light-grayish-blue,
        todoCompleteFontColor : $very-dark-grayish-blue,
        footerfontColor : $dark-grayish-blue,
        footerHoverColor : white,
        borderColor : $dark-grayish-blue,
    )
);

@mixin themify($themes){
    @each $theme, $map in $themes {
        .theme-#{$theme} & {
            $theme-map : () !global;
            @each $key , $submap in $map{
                $value : map-get(map-get($themes,$theme) , '#{$key}');
                $theme-map : map-merge(
                    $map1: $theme-map , 
                    $map2: ($key : $value),
                ) !global
            }
            @content;
            $theme-map : null !global;
        }
    }
}


@function themed($key){
    @return map-get($theme-map, $key );
}